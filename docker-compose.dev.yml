version: "3.8"

# Development version - builds images on-the-fly
# Use: docker-compose -f docker-compose.dev.yml up -d --build

services:
  postgres:
    image: postgres:15
    container_name: payment-postgres-dev
    environment:
      POSTGRES_DB: optica-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: optica123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./consumer-service/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - payment-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: payment-rabbitmq-dev
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data_dev:/var/lib/rabbitmq
    networks:
      - payment-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: payment-gateway-dev
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_VHOST: /
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - payment-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/gateway/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  consumer-service:
    build:
      context: ./consumer-service
      dockerfile: Dockerfile
    container_name: payment-consumer-dev
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: optica-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: optica123
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_VHOST: /
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - payment-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_dev:
  rabbitmq_data_dev:

networks:
  payment-network:
    driver: bridge
